with scores as ( select competitor.id as competitor_id, competitor.firstname, competitor.lastname, to_jsonb(competitor.*) as competitor, score.result, to_jsonb(category.*) as category, to_jsonb(event.*) as event, event.id as event_id, CASE WHEN event.max_score_best THEN ROW_NUMBER () OVER (PARTITION BY category.id,event.id ORDER BY score desc) + (category.position * 1000) ELSE ROW_NUMBER () OVER (PARTITION BY category.id,event.id ORDER BY score) + (category.position * 1000) END as position_wod from score left join event on score.event_id = event.idleft join category on category.id = score.category_id left join competition on competition.id = event.competition_id left join competitor on competitor.id = score.competitor_id left join gender on gender.id = competitor.gender_id where gender.id = :gender_id and competition.id = :competition_id order by event.name asc,  position asc ),scores_points as ( SELECT *, ROW_NUMBER () OVER (PARTITION BY event_id ORDER BY position_wod) as point FROM scores) select competitor.id, competitor.firstname, competitor.lastname,  sum(scores_points.point) as points, jsonb_agg(scores_points.*) as events, ROW_NUMBER () OVER (order by sum(scores_points.point) asc) as rank from competitor left join scores_points on scores_points.competitor_id = competitor.id LEFT JOIN link_competition_competitor lcc on lcc.competitor_id = competitor.id left join gender on gender.id = competitor.gender_id where lcc.competition_id = :competition_id and gender.id = :gender_id group by competitor.id;